[{"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/App.js":"1","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/routes.js":"2","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/public/SignIn/index.js":"3","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/index.js":"4","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/public/SignUp/index.js":"5","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/auth.js":"6","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/api.js":"7","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/shared/styles/index.js":"8","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/shared/header/styles.js":"9","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/secure/Dashboard/index.js":"10","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/accounts.js":"11","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/routes/route-wrapper.js":"12","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/routes/index.js":"13","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/secure/ContactList/index.js":"14","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/contacts.js":"15"},{"size":115,"mtime":1608055577276,"results":"16","hashOfConfig":"17"},{"size":3178,"mtime":1607972041460,"results":"18","hashOfConfig":"17"},{"size":3271,"mtime":1608057065093,"results":"19","hashOfConfig":"17"},{"size":244,"mtime":1607968812998,"results":"20","hashOfConfig":"17"},{"size":4487,"mtime":1608057176234,"results":"21","hashOfConfig":"17"},{"size":341,"mtime":1608043937181,"results":"22","hashOfConfig":"17"},{"size":314,"mtime":1608045699050,"results":"23","hashOfConfig":"17"},{"size":323,"mtime":1608052307698,"results":"24","hashOfConfig":"17"},{"size":218,"mtime":1608055926764,"results":"25","hashOfConfig":"17"},{"size":686,"mtime":1608056188710,"results":"26","hashOfConfig":"17"},{"size":507,"mtime":1608057241015,"results":"27","hashOfConfig":"17"},{"size":525,"mtime":1608055405967,"results":"28","hashOfConfig":"17"},{"size":1025,"mtime":1608314306662,"results":"29","hashOfConfig":"17"},{"size":2441,"mtime":1608315909396,"results":"30","hashOfConfig":"17"},{"size":689,"mtime":1608301375863,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g33ht",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/App.js",[],["69","70"],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/routes.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/public/SignIn/index.js",["71"],"import React from 'react';\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport { BoxForm, BoxContent } from '../../../shared/styles';\nimport Logo from '../../../assets/logo.png'\nimport AccountsService from '../../../services/accounts';\nimport { login } from '../../../services/auth';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass SignIn extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        error: ''\n    };\n\n    handleSignIn = async (event) => {\n        event.preventDefault();\n\n        const { email, password, error } = this.state;\n\n        if (!email || !password) {\n            this.setState({ error: 'Informe todos os campos para acessar' });\n        } else {\n            try {\n                const service = new AccountsService();\n                const response = await service.login(email, password);\n                login(response.data.token);\n                this.props.history.push(\"/\");\n            } catch (error) {\n                console.log(error);\n                this.setState({ error: 'Ocorreu um erro durante a tentativa de login.' });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs={12} md={5}>\n                        <BoxContent>\n                            <img src={Logo} alt='MailShrimp' height=\"100\" />\n                        </BoxContent>\n                        <BoxForm>\n                            <h2>Login</h2>\n                            <p>Informe seus dados para autenticar:</p>\n                            <Form onSubmit={this.handleSignIn}>\n                                <Form.Group controlId=\"emailGroup\">\n                                    <Form.Label>E-mail:</Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"Digite seu e-mail\"\n                                        onChange={e => this.setState({ email: e.target.value })}\n                                    />\n                                </Form.Group>\n                                <Form.Group controlId=\"passwordGroup\">\n                                    <Form.Label>Senha:</Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"Digite sua senha\"\n                                        onChange={e => this.setState({ password: e.target.value })}\n                                    />\n                                </Form.Group>\n                                <Button block variant=\"secondary\" type=\"submit\">\n                                    Fazer login\n                                </Button>\n                            </Form>\n                        </BoxForm>\n                        <BoxContent>\n                            <p>Novo na plataforma?</p>\n                            <Link className=\"button\" to=\"/signup\">Crie sua conta agora</Link>\n                        </BoxContent>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(SignIn);",["72","73"],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/index.js",[],["74","75"],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/public/SignUp/index.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/auth.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/api.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/shared/styles/index.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/shared/header/styles.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/secure/Dashboard/index.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/accounts.js",[],["76","77"],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/routes/route-wrapper.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/routes/index.js",[],"/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/pages/secure/ContactList/index.js",["78"],"import React from 'react';\nimport Header from '../../../shared/header';\nimport { PageContent } from '../../../shared/styles';\nimport { Container, Table, Row, Col } from 'react-bootstrap';\nimport { Link, withRouter, useRouteMatch } from 'react-router-dom';\nimport ContactsService from '../../../services/contacts';\n\nfunction RenderLine({ contact }) {\n    const { url } = useRouteMatch();\n\n    return (\n        <tr key={contact.id}>\n            <td>\n                <Link to={`${url}/${contact.id}`}>{contact.email}</Link>\n            </td>\n            <td>{contact.name}</td>\n        </tr>\n    )\n}\n\nfunction RenderTable({ contacts }) {\n    return (\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                    <th>E-mail</th>\n                    <th>Nome</th>\n                </tr>\n            </thead>\n            <tbody>\n                {contacts.map((item) => <RenderLine key={item.id} contact={item} />)}\n            </tbody>\n        </Table>\n    )\n}\n\nfunction RenderEmptyRow() {\n    return (\n        <tr>\n            <td colspan='2'>Nenhum contato disponível.</td>\n        </tr>\n    )\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            contacts: []\n        };\n    }\n\n    async componentDidMount() {\n        const service = new ContactsService();\n\n        const result = await service.getAll();\n\n        this.setState({\n            isLoading: true,\n            contacts: result,\n        });\n    }\n\n    render() {\n        const { isLoading, contacts } = this.state;\n\n        return (\n            <>\n                <Header />\n                <PageContent>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <h3>Contatos</h3>\n                            </Col>\n                            <Col>\n                                <Link className='btn btn-success float-right' to='/contacts/add'>Adicionar contato</Link>\n                            </Col>\n                        </Row>\n                        <p>Relação de contatos cadastrados.</p>\n                        {contacts.length === 0 && <RenderEmptyRow />}\n                        {!isLoading && <RenderTable contacts={contacts} />}\n                    </Container>\n                </PageContent>\n            </>\n        )\n    }\n}\n\nexport default Contacts;","/home/alquimar/Documentos/Projetos/Node/curso-fullstack-js/frontend/src/services/contacts.js",["79"],"import baseAPI from './api';\nimport baseURLs from '../configs/baseURLs';\n\nclass ContactsService {\n    constructor() {\n        this.api = baseAPI(baseURLs.API_CONTACTS);\n    }\n\n    async getAll() {\n        const result = await this.api.get('contacts');\n\n        return result.data;\n    }\n\n    async getOne(contactId) {\n        const result = await this.api.get(`contacts/${contactId}`);\n    }\n\n    async add(contactModel) {\n        const result = await this.api.post('contacts', contactModel);\n\n        return result;\n    }\n\n    async delete(contactId) {\n        const result = await this.api.delete(`contacts/${contactId}`);\n\n        return result;\n    }\n}\n\nexport default ContactsService;",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":19,"column":34,"nodeType":"86","messageId":"87","endLine":19,"endColumn":39},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"82","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"94","line":5,"column":16,"nodeType":"86","messageId":"87","endLine":5,"endColumn":26},{"ruleId":"84","severity":1,"message":"95","line":16,"column":15,"nodeType":"86","messageId":"87","endLine":16,"endColumn":21},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["96"],["97"],["96"],["97"],["96"],["97"],"'withRouter' is defined but never used.","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]